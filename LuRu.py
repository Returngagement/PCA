# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '录入.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import cv2
import numpy as np
import LuRu
class Ui_LuRu_Window(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 600)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit.setGeometry(QtCore.QRect(210, 220, 171, 51))
        self.lineEdit.setObjectName("lineEdit")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(121, 235, 99, 33))
        font = QtGui.QFont()
        font.setPointSize(20)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(480, 220, 151, 51))
        font = QtGui.QFont()
        font.setPointSize(20)
        self.pushButton.setFont(font)
        self.pushButton.setObjectName("pushButton")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 26))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        self.pushButton.clicked.connect(self.handleCalc1)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "录入信息"))
        self.label.setText(_translate("MainWindow", "姓名："))
        self.pushButton.setText(_translate("MainWindow", "开始录入"))

    #录入按钮被点击
    def handleCalc1(self):
        str1 = self.lineEdit.text()  # 从输入框获得用户输入的文本信息，单行显示
        if len(str1)!=0:
            def video_demo():
                print('开始')
                cap = cv2.VideoCapture(0)  # 电脑自身摄像头
                i = 0  # 定时装置初始值
                photoname = 1  # 文件名序号初始值
                while True:
                    i = i + 1
                    reg, frame = cap.read()
                    frame = cv2.flip(frame, 1)  # 图片左右调换
                    cv2.imshow('window', frame)

                    if i == 50:  # 定时装置，定时截屏，可以修改。

                        filename = str(photoname) + '.png'  # filename为图像名字，将photoname作为编号命名保存的截图
                        cv2.imwrite('E:/PCA/' + filename, frame)  # 截图保存 frame为此时的图像
                        print(filename + '保存成功')  # 打印保存成功
                        i = 0  # 清零
                        photoname = photoname
                        if photoname >= 10:  # 最多截图10张 然后退出（如果调用photoname = 1 不用break为不断覆盖图片）
                            # photoname = 1
                            break
                        photoname = photoname + 1
                    if cv2.waitKey(1) & 0xff == ord('q'):
                        break
                # 释放资源
                cap.release()

            video_demo()
            cv2.destroyAllWindows()
